// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Product {
  id          String     @id @default(uuid()) @map("_id")
  name        String
  company     String
  description String
  featured    Boolean
  image       String
  price       Int
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt
  clerkId     String
  favorites   Favorite[]
  reviews     Review[]
}

model Favorite {
  id        String   @id @default(uuid()) @map("_id")
  clerkId   String
  // product: Product @relation(fields: [productId], references: [id], onDelete: Cascade):
  //  A relation to the Product model, indicating which product is favorited.
  //  The onDelete: Cascade directive ensures that if a product is deleted, all associated favorites are also deleted.
  // This is a one-to-many relationship, where one product can have many favorites.
  // foreign key here is productId, which is a reference to the id field in the Product model.
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Review {
  id             String   @id @default(uuid()) @map("_id")
  clerkId        String
  rating         Int
  comment        String
  authorName     String
  authorImageUrl String
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  product        Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  productId      String
}
